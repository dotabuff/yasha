// Code generated by protoc-gen-go.
// source: netmessages.proto
// DO NOT EDIT!

package dota

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type CLC_Messages int32

const (
	CLC_Messages_clc_ClientInfo         CLC_Messages = 8
	CLC_Messages_clc_Move               CLC_Messages = 9
	CLC_Messages_clc_VoiceData          CLC_Messages = 10
	CLC_Messages_clc_BaselineAck        CLC_Messages = 11
	CLC_Messages_clc_ListenEvents       CLC_Messages = 12
	CLC_Messages_clc_RespondCvarValue   CLC_Messages = 13
	CLC_Messages_clc_FileCRCCheck       CLC_Messages = 14
	CLC_Messages_clc_LoadingProgress    CLC_Messages = 15
	CLC_Messages_clc_SplitPlayerConnect CLC_Messages = 16
	CLC_Messages_clc_ClientMessage      CLC_Messages = 17
)

var CLC_Messages_name = map[int32]string{
	8:  "clc_ClientInfo",
	9:  "clc_Move",
	10: "clc_VoiceData",
	11: "clc_BaselineAck",
	12: "clc_ListenEvents",
	13: "clc_RespondCvarValue",
	14: "clc_FileCRCCheck",
	15: "clc_LoadingProgress",
	16: "clc_SplitPlayerConnect",
	17: "clc_ClientMessage",
}
var CLC_Messages_value = map[string]int32{
	"clc_ClientInfo":         8,
	"clc_Move":               9,
	"clc_VoiceData":          10,
	"clc_BaselineAck":        11,
	"clc_ListenEvents":       12,
	"clc_RespondCvarValue":   13,
	"clc_FileCRCCheck":       14,
	"clc_LoadingProgress":    15,
	"clc_SplitPlayerConnect": 16,
	"clc_ClientMessage":      17,
}

func (x CLC_Messages) Enum() *CLC_Messages {
	p := new(CLC_Messages)
	*p = x
	return p
}
func (x CLC_Messages) String() string {
	return proto.EnumName(CLC_Messages_name, int32(x))
}
func (x *CLC_Messages) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CLC_Messages_value, data, "CLC_Messages")
	if err != nil {
		return err
	}
	*x = CLC_Messages(value)
	return nil
}

type SVC_Messages int32

const (
	SVC_Messages_svc_ServerInfo        SVC_Messages = 8
	SVC_Messages_svc_SendTable         SVC_Messages = 9
	SVC_Messages_svc_ClassInfo         SVC_Messages = 10
	SVC_Messages_svc_SetPause          SVC_Messages = 11
	SVC_Messages_svc_CreateStringTable SVC_Messages = 12
	SVC_Messages_svc_UpdateStringTable SVC_Messages = 13
	SVC_Messages_svc_VoiceInit         SVC_Messages = 14
	SVC_Messages_svc_VoiceData         SVC_Messages = 15
	SVC_Messages_svc_Print             SVC_Messages = 16
	SVC_Messages_svc_Sounds            SVC_Messages = 17
	SVC_Messages_svc_SetView           SVC_Messages = 18
	SVC_Messages_svc_FixAngle          SVC_Messages = 19
	SVC_Messages_svc_CrosshairAngle    SVC_Messages = 20
	SVC_Messages_svc_BSPDecal          SVC_Messages = 21
	SVC_Messages_svc_SplitScreen       SVC_Messages = 22
	SVC_Messages_svc_UserMessage       SVC_Messages = 23
	SVC_Messages_svc_EntityMessage     SVC_Messages = 24
	SVC_Messages_svc_GameEvent         SVC_Messages = 25
	SVC_Messages_svc_PacketEntities    SVC_Messages = 26
	SVC_Messages_svc_TempEntities      SVC_Messages = 27
	SVC_Messages_svc_Prefetch          SVC_Messages = 28
	SVC_Messages_svc_Menu              SVC_Messages = 29
	SVC_Messages_svc_GameEventList     SVC_Messages = 30
	SVC_Messages_svc_GetCvarValue      SVC_Messages = 31
	SVC_Messages_svc_PacketReliable    SVC_Messages = 32
	SVC_Messages_svc_FullFrameSplit    SVC_Messages = 33
)

var SVC_Messages_name = map[int32]string{
	8:  "svc_ServerInfo",
	9:  "svc_SendTable",
	10: "svc_ClassInfo",
	11: "svc_SetPause",
	12: "svc_CreateStringTable",
	13: "svc_UpdateStringTable",
	14: "svc_VoiceInit",
	15: "svc_VoiceData",
	16: "svc_Print",
	17: "svc_Sounds",
	18: "svc_SetView",
	19: "svc_FixAngle",
	20: "svc_CrosshairAngle",
	21: "svc_BSPDecal",
	22: "svc_SplitScreen",
	23: "svc_UserMessage",
	24: "svc_EntityMessage",
	25: "svc_GameEvent",
	26: "svc_PacketEntities",
	27: "svc_TempEntities",
	28: "svc_Prefetch",
	29: "svc_Menu",
	30: "svc_GameEventList",
	31: "svc_GetCvarValue",
	32: "svc_PacketReliable",
	33: "svc_FullFrameSplit",
}
var SVC_Messages_value = map[string]int32{
	"svc_ServerInfo":        8,
	"svc_SendTable":         9,
	"svc_ClassInfo":         10,
	"svc_SetPause":          11,
	"svc_CreateStringTable": 12,
	"svc_UpdateStringTable": 13,
	"svc_VoiceInit":         14,
	"svc_VoiceData":         15,
	"svc_Print":             16,
	"svc_Sounds":            17,
	"svc_SetView":           18,
	"svc_FixAngle":          19,
	"svc_CrosshairAngle":    20,
	"svc_BSPDecal":          21,
	"svc_SplitScreen":       22,
	"svc_UserMessage":       23,
	"svc_EntityMessage":     24,
	"svc_GameEvent":         25,
	"svc_PacketEntities":    26,
	"svc_TempEntities":      27,
	"svc_Prefetch":          28,
	"svc_Menu":              29,
	"svc_GameEventList":     30,
	"svc_GetCvarValue":      31,
	"svc_PacketReliable":    32,
	"svc_FullFrameSplit":    33,
}

func (x SVC_Messages) Enum() *SVC_Messages {
	p := new(SVC_Messages)
	*p = x
	return p
}
func (x SVC_Messages) String() string {
	return proto.EnumName(SVC_Messages_name, int32(x))
}
func (x *SVC_Messages) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SVC_Messages_value, data, "SVC_Messages")
	if err != nil {
		return err
	}
	*x = SVC_Messages(value)
	return nil
}

type VoiceDataFormatT int32

const (
	VoiceDataFormatT_VOICEDATA_FORMAT_STEAM  VoiceDataFormatT = 0
	VoiceDataFormatT_VOICEDATA_FORMAT_ENGINE VoiceDataFormatT = 1
)

var VoiceDataFormatT_name = map[int32]string{
	0: "VOICEDATA_FORMAT_STEAM",
	1: "VOICEDATA_FORMAT_ENGINE",
}
var VoiceDataFormatT_value = map[string]int32{
	"VOICEDATA_FORMAT_STEAM":  0,
	"VOICEDATA_FORMAT_ENGINE": 1,
}

func (x VoiceDataFormatT) Enum() *VoiceDataFormatT {
	p := new(VoiceDataFormatT)
	*p = x
	return p
}
func (x VoiceDataFormatT) String() string {
	return proto.EnumName(VoiceDataFormatT_name, int32(x))
}
func (x *VoiceDataFormatT) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(VoiceDataFormatT_value, data, "VoiceDataFormatT")
	if err != nil {
		return err
	}
	*x = VoiceDataFormatT(value)
	return nil
}

type ESplitScreenMessageType int32

const (
	ESplitScreenMessageType_MSG_SPLITSCREEN_ADDUSER    ESplitScreenMessageType = 0
	ESplitScreenMessageType_MSG_SPLITSCREEN_REMOVEUSER ESplitScreenMessageType = 1
)

var ESplitScreenMessageType_name = map[int32]string{
	0: "MSG_SPLITSCREEN_ADDUSER",
	1: "MSG_SPLITSCREEN_REMOVEUSER",
}
var ESplitScreenMessageType_value = map[string]int32{
	"MSG_SPLITSCREEN_ADDUSER":    0,
	"MSG_SPLITSCREEN_REMOVEUSER": 1,
}

func (x ESplitScreenMessageType) Enum() *ESplitScreenMessageType {
	p := new(ESplitScreenMessageType)
	*p = x
	return p
}
func (x ESplitScreenMessageType) String() string {
	return proto.EnumName(ESplitScreenMessageType_name, int32(x))
}
func (x *ESplitScreenMessageType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ESplitScreenMessageType_value, data, "ESplitScreenMessageType")
	if err != nil {
		return err
	}
	*x = ESplitScreenMessageType(value)
	return nil
}

type CCLCMsg_ClientInfo struct {
	SendTableCrc     *uint32  `protobuf:"fixed32,1,opt,name=send_table_crc" json:"send_table_crc,omitempty"`
	ServerCount      *uint32  `protobuf:"varint,2,opt,name=server_count" json:"server_count,omitempty"`
	IsHltv           *bool    `protobuf:"varint,3,opt,name=is_hltv" json:"is_hltv,omitempty"`
	IsReplay         *bool    `protobuf:"varint,4,opt,name=is_replay" json:"is_replay,omitempty"`
	FriendsId        *uint32  `protobuf:"varint,5,opt,name=friends_id" json:"friends_id,omitempty"`
	FriendsName      *string  `protobuf:"bytes,6,opt,name=friends_name" json:"friends_name,omitempty"`
	CustomFiles      []uint32 `protobuf:"fixed32,7,rep,name=custom_files" json:"custom_files,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CCLCMsg_ClientInfo) Reset()         { *m = CCLCMsg_ClientInfo{} }
func (m *CCLCMsg_ClientInfo) String() string { return proto.CompactTextString(m) }
func (*CCLCMsg_ClientInfo) ProtoMessage()    {}

func (m *CCLCMsg_ClientInfo) GetSendTableCrc() uint32 {
	if m != nil && m.SendTableCrc != nil {
		return *m.SendTableCrc
	}
	return 0
}

func (m *CCLCMsg_ClientInfo) GetServerCount() uint32 {
	if m != nil && m.ServerCount != nil {
		return *m.ServerCount
	}
	return 0
}

func (m *CCLCMsg_ClientInfo) GetIsHltv() bool {
	if m != nil && m.IsHltv != nil {
		return *m.IsHltv
	}
	return false
}

func (m *CCLCMsg_ClientInfo) GetIsReplay() bool {
	if m != nil && m.IsReplay != nil {
		return *m.IsReplay
	}
	return false
}

func (m *CCLCMsg_ClientInfo) GetFriendsId() uint32 {
	if m != nil && m.FriendsId != nil {
		return *m.FriendsId
	}
	return 0
}

func (m *CCLCMsg_ClientInfo) GetFriendsName() string {
	if m != nil && m.FriendsName != nil {
		return *m.FriendsName
	}
	return ""
}

func (m *CCLCMsg_ClientInfo) GetCustomFiles() []uint32 {
	if m != nil {
		return m.CustomFiles
	}
	return nil
}

type CCLCMsg_Move struct {
	NumBackupCommands *uint32 `protobuf:"varint,1,opt,name=num_backup_commands" json:"num_backup_commands,omitempty"`
	NumNewCommands    *uint32 `protobuf:"varint,2,opt,name=num_new_commands" json:"num_new_commands,omitempty"`
	Data              []byte  `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CCLCMsg_Move) Reset()         { *m = CCLCMsg_Move{} }
func (m *CCLCMsg_Move) String() string { return proto.CompactTextString(m) }
func (*CCLCMsg_Move) ProtoMessage()    {}

func (m *CCLCMsg_Move) GetNumBackupCommands() uint32 {
	if m != nil && m.NumBackupCommands != nil {
		return *m.NumBackupCommands
	}
	return 0
}

func (m *CCLCMsg_Move) GetNumNewCommands() uint32 {
	if m != nil && m.NumNewCommands != nil {
		return *m.NumNewCommands
	}
	return 0
}

func (m *CCLCMsg_Move) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CCLCMsg_VoiceData struct {
	Data                     []byte            `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Xuid                     *uint64           `protobuf:"fixed64,2,opt,name=xuid" json:"xuid,omitempty"`
	Format                   *VoiceDataFormatT `protobuf:"varint,3,opt,name=format,enum=dota.VoiceDataFormatT,def=0" json:"format,omitempty"`
	SequenceBytes            *int32            `protobuf:"varint,4,opt,name=sequence_bytes" json:"sequence_bytes,omitempty"`
	SectionNumber            *uint32           `protobuf:"varint,5,opt,name=section_number" json:"section_number,omitempty"`
	UncompressedSampleOffset *uint32           `protobuf:"varint,6,opt,name=uncompressed_sample_offset" json:"uncompressed_sample_offset,omitempty"`
	Tick                     *uint32           `protobuf:"varint,7,opt,name=tick" json:"tick,omitempty"`
	XXX_unrecognized         []byte            `json:"-"`
}

func (m *CCLCMsg_VoiceData) Reset()         { *m = CCLCMsg_VoiceData{} }
func (m *CCLCMsg_VoiceData) String() string { return proto.CompactTextString(m) }
func (*CCLCMsg_VoiceData) ProtoMessage()    {}

const Default_CCLCMsg_VoiceData_Format VoiceDataFormatT = VoiceDataFormatT_VOICEDATA_FORMAT_STEAM

func (m *CCLCMsg_VoiceData) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CCLCMsg_VoiceData) GetXuid() uint64 {
	if m != nil && m.Xuid != nil {
		return *m.Xuid
	}
	return 0
}

func (m *CCLCMsg_VoiceData) GetFormat() VoiceDataFormatT {
	if m != nil && m.Format != nil {
		return *m.Format
	}
	return Default_CCLCMsg_VoiceData_Format
}

func (m *CCLCMsg_VoiceData) GetSequenceBytes() int32 {
	if m != nil && m.SequenceBytes != nil {
		return *m.SequenceBytes
	}
	return 0
}

func (m *CCLCMsg_VoiceData) GetSectionNumber() uint32 {
	if m != nil && m.SectionNumber != nil {
		return *m.SectionNumber
	}
	return 0
}

func (m *CCLCMsg_VoiceData) GetUncompressedSampleOffset() uint32 {
	if m != nil && m.UncompressedSampleOffset != nil {
		return *m.UncompressedSampleOffset
	}
	return 0
}

func (m *CCLCMsg_VoiceData) GetTick() uint32 {
	if m != nil && m.Tick != nil {
		return *m.Tick
	}
	return 0
}

type CCLCMsg_BaselineAck struct {
	BaselineTick     *int32 `protobuf:"varint,1,opt,name=baseline_tick" json:"baseline_tick,omitempty"`
	BaselineNr       *int32 `protobuf:"varint,2,opt,name=baseline_nr" json:"baseline_nr,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCLCMsg_BaselineAck) Reset()         { *m = CCLCMsg_BaselineAck{} }
func (m *CCLCMsg_BaselineAck) String() string { return proto.CompactTextString(m) }
func (*CCLCMsg_BaselineAck) ProtoMessage()    {}

func (m *CCLCMsg_BaselineAck) GetBaselineTick() int32 {
	if m != nil && m.BaselineTick != nil {
		return *m.BaselineTick
	}
	return 0
}

func (m *CCLCMsg_BaselineAck) GetBaselineNr() int32 {
	if m != nil && m.BaselineNr != nil {
		return *m.BaselineNr
	}
	return 0
}

type CCLCMsg_ListenEvents struct {
	EventMask        []uint32 `protobuf:"fixed32,1,rep,name=event_mask" json:"event_mask,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CCLCMsg_ListenEvents) Reset()         { *m = CCLCMsg_ListenEvents{} }
func (m *CCLCMsg_ListenEvents) String() string { return proto.CompactTextString(m) }
func (*CCLCMsg_ListenEvents) ProtoMessage()    {}

func (m *CCLCMsg_ListenEvents) GetEventMask() []uint32 {
	if m != nil {
		return m.EventMask
	}
	return nil
}

type CCLCMsg_RespondCvarValue struct {
	Cookie           *int32  `protobuf:"varint,1,opt,name=cookie" json:"cookie,omitempty"`
	StatusCode       *int32  `protobuf:"varint,2,opt,name=status_code" json:"status_code,omitempty"`
	Name             *string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Value            *string `protobuf:"bytes,4,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CCLCMsg_RespondCvarValue) Reset()         { *m = CCLCMsg_RespondCvarValue{} }
func (m *CCLCMsg_RespondCvarValue) String() string { return proto.CompactTextString(m) }
func (*CCLCMsg_RespondCvarValue) ProtoMessage()    {}

func (m *CCLCMsg_RespondCvarValue) GetCookie() int32 {
	if m != nil && m.Cookie != nil {
		return *m.Cookie
	}
	return 0
}

func (m *CCLCMsg_RespondCvarValue) GetStatusCode() int32 {
	if m != nil && m.StatusCode != nil {
		return *m.StatusCode
	}
	return 0
}

func (m *CCLCMsg_RespondCvarValue) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CCLCMsg_RespondCvarValue) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type CCLCMsg_FileCRCCheck struct {
	CodePath         *int32  `protobuf:"varint,1,opt,name=code_path" json:"code_path,omitempty"`
	Path             *string `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	CodeFilename     *int32  `protobuf:"varint,3,opt,name=code_filename" json:"code_filename,omitempty"`
	Filename         *string `protobuf:"bytes,4,opt,name=filename" json:"filename,omitempty"`
	Crc              *uint32 `protobuf:"fixed32,5,opt,name=crc" json:"crc,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CCLCMsg_FileCRCCheck) Reset()         { *m = CCLCMsg_FileCRCCheck{} }
func (m *CCLCMsg_FileCRCCheck) String() string { return proto.CompactTextString(m) }
func (*CCLCMsg_FileCRCCheck) ProtoMessage()    {}

func (m *CCLCMsg_FileCRCCheck) GetCodePath() int32 {
	if m != nil && m.CodePath != nil {
		return *m.CodePath
	}
	return 0
}

func (m *CCLCMsg_FileCRCCheck) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

func (m *CCLCMsg_FileCRCCheck) GetCodeFilename() int32 {
	if m != nil && m.CodeFilename != nil {
		return *m.CodeFilename
	}
	return 0
}

func (m *CCLCMsg_FileCRCCheck) GetFilename() string {
	if m != nil && m.Filename != nil {
		return *m.Filename
	}
	return ""
}

func (m *CCLCMsg_FileCRCCheck) GetCrc() uint32 {
	if m != nil && m.Crc != nil {
		return *m.Crc
	}
	return 0
}

type CCLCMsg_LoadingProgress struct {
	Progress         *int32 `protobuf:"varint,1,opt,name=progress" json:"progress,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCLCMsg_LoadingProgress) Reset()         { *m = CCLCMsg_LoadingProgress{} }
func (m *CCLCMsg_LoadingProgress) String() string { return proto.CompactTextString(m) }
func (*CCLCMsg_LoadingProgress) ProtoMessage()    {}

func (m *CCLCMsg_LoadingProgress) GetProgress() int32 {
	if m != nil && m.Progress != nil {
		return *m.Progress
	}
	return 0
}

type CCLCMsg_SplitPlayerConnect struct {
	Convars          *CMsg_CVars `protobuf:"bytes,1,opt,name=convars" json:"convars,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CCLCMsg_SplitPlayerConnect) Reset()         { *m = CCLCMsg_SplitPlayerConnect{} }
func (m *CCLCMsg_SplitPlayerConnect) String() string { return proto.CompactTextString(m) }
func (*CCLCMsg_SplitPlayerConnect) ProtoMessage()    {}

func (m *CCLCMsg_SplitPlayerConnect) GetConvars() *CMsg_CVars {
	if m != nil {
		return m.Convars
	}
	return nil
}

type CCLCMsg_ClientMessage struct {
	MsgType          *int32 `protobuf:"varint,1,opt,name=msg_type" json:"msg_type,omitempty"`
	Data             []byte `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCLCMsg_ClientMessage) Reset()         { *m = CCLCMsg_ClientMessage{} }
func (m *CCLCMsg_ClientMessage) String() string { return proto.CompactTextString(m) }
func (*CCLCMsg_ClientMessage) ProtoMessage()    {}

func (m *CCLCMsg_ClientMessage) GetMsgType() int32 {
	if m != nil && m.MsgType != nil {
		return *m.MsgType
	}
	return 0
}

func (m *CCLCMsg_ClientMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CSVCMsg_ServerInfo struct {
	Protocol         *int32   `protobuf:"varint,1,opt,name=protocol" json:"protocol,omitempty"`
	ServerCount      *int32   `protobuf:"varint,2,opt,name=server_count" json:"server_count,omitempty"`
	IsDedicated      *bool    `protobuf:"varint,3,opt,name=is_dedicated" json:"is_dedicated,omitempty"`
	IsHltv           *bool    `protobuf:"varint,4,opt,name=is_hltv" json:"is_hltv,omitempty"`
	IsReplay         *bool    `protobuf:"varint,5,opt,name=is_replay" json:"is_replay,omitempty"`
	COs              *int32   `protobuf:"varint,6,opt,name=c_os" json:"c_os,omitempty"`
	MapCrc           *uint32  `protobuf:"fixed32,7,opt,name=map_crc" json:"map_crc,omitempty"`
	ClientCrc        *uint32  `protobuf:"fixed32,8,opt,name=client_crc" json:"client_crc,omitempty"`
	StringTableCrc   *uint32  `protobuf:"fixed32,9,opt,name=string_table_crc" json:"string_table_crc,omitempty"`
	MaxClients       *int32   `protobuf:"varint,10,opt,name=max_clients" json:"max_clients,omitempty"`
	MaxClasses       *int32   `protobuf:"varint,11,opt,name=max_classes" json:"max_classes,omitempty"`
	PlayerSlot       *int32   `protobuf:"varint,12,opt,name=player_slot" json:"player_slot,omitempty"`
	TickInterval     *float32 `protobuf:"fixed32,13,opt,name=tick_interval" json:"tick_interval,omitempty"`
	GameDir          *string  `protobuf:"bytes,14,opt,name=game_dir" json:"game_dir,omitempty"`
	MapName          *string  `protobuf:"bytes,15,opt,name=map_name" json:"map_name,omitempty"`
	SkyName          *string  `protobuf:"bytes,16,opt,name=sky_name" json:"sky_name,omitempty"`
	HostName         *string  `protobuf:"bytes,17,opt,name=host_name" json:"host_name,omitempty"`
	AddonName        *string  `protobuf:"bytes,18,opt,name=addon_name" json:"addon_name,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CSVCMsg_ServerInfo) Reset()         { *m = CSVCMsg_ServerInfo{} }
func (m *CSVCMsg_ServerInfo) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_ServerInfo) ProtoMessage()    {}

func (m *CSVCMsg_ServerInfo) GetProtocol() int32 {
	if m != nil && m.Protocol != nil {
		return *m.Protocol
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetServerCount() int32 {
	if m != nil && m.ServerCount != nil {
		return *m.ServerCount
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetIsDedicated() bool {
	if m != nil && m.IsDedicated != nil {
		return *m.IsDedicated
	}
	return false
}

func (m *CSVCMsg_ServerInfo) GetIsHltv() bool {
	if m != nil && m.IsHltv != nil {
		return *m.IsHltv
	}
	return false
}

func (m *CSVCMsg_ServerInfo) GetIsReplay() bool {
	if m != nil && m.IsReplay != nil {
		return *m.IsReplay
	}
	return false
}

func (m *CSVCMsg_ServerInfo) GetCOs() int32 {
	if m != nil && m.COs != nil {
		return *m.COs
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetMapCrc() uint32 {
	if m != nil && m.MapCrc != nil {
		return *m.MapCrc
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetClientCrc() uint32 {
	if m != nil && m.ClientCrc != nil {
		return *m.ClientCrc
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetStringTableCrc() uint32 {
	if m != nil && m.StringTableCrc != nil {
		return *m.StringTableCrc
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetMaxClients() int32 {
	if m != nil && m.MaxClients != nil {
		return *m.MaxClients
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetMaxClasses() int32 {
	if m != nil && m.MaxClasses != nil {
		return *m.MaxClasses
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetPlayerSlot() int32 {
	if m != nil && m.PlayerSlot != nil {
		return *m.PlayerSlot
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetTickInterval() float32 {
	if m != nil && m.TickInterval != nil {
		return *m.TickInterval
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetGameDir() string {
	if m != nil && m.GameDir != nil {
		return *m.GameDir
	}
	return ""
}

func (m *CSVCMsg_ServerInfo) GetMapName() string {
	if m != nil && m.MapName != nil {
		return *m.MapName
	}
	return ""
}

func (m *CSVCMsg_ServerInfo) GetSkyName() string {
	if m != nil && m.SkyName != nil {
		return *m.SkyName
	}
	return ""
}

func (m *CSVCMsg_ServerInfo) GetHostName() string {
	if m != nil && m.HostName != nil {
		return *m.HostName
	}
	return ""
}

func (m *CSVCMsg_ServerInfo) GetAddonName() string {
	if m != nil && m.AddonName != nil {
		return *m.AddonName
	}
	return ""
}

type CSVCMsg_ClassInfo struct {
	CreateOnClient   *bool                      `protobuf:"varint,1,opt,name=create_on_client" json:"create_on_client,omitempty"`
	Classes          []*CSVCMsg_ClassInfoClassT `protobuf:"bytes,2,rep,name=classes" json:"classes,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *CSVCMsg_ClassInfo) Reset()         { *m = CSVCMsg_ClassInfo{} }
func (m *CSVCMsg_ClassInfo) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_ClassInfo) ProtoMessage()    {}

func (m *CSVCMsg_ClassInfo) GetCreateOnClient() bool {
	if m != nil && m.CreateOnClient != nil {
		return *m.CreateOnClient
	}
	return false
}

func (m *CSVCMsg_ClassInfo) GetClasses() []*CSVCMsg_ClassInfoClassT {
	if m != nil {
		return m.Classes
	}
	return nil
}

type CSVCMsg_ClassInfoClassT struct {
	ClassId          *int32  `protobuf:"varint,1,opt,name=class_id" json:"class_id,omitempty"`
	DataTableName    *string `protobuf:"bytes,2,opt,name=data_table_name" json:"data_table_name,omitempty"`
	ClassName        *string `protobuf:"bytes,3,opt,name=class_name" json:"class_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSVCMsg_ClassInfoClassT) Reset()         { *m = CSVCMsg_ClassInfoClassT{} }
func (m *CSVCMsg_ClassInfoClassT) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_ClassInfoClassT) ProtoMessage()    {}

func (m *CSVCMsg_ClassInfoClassT) GetClassId() int32 {
	if m != nil && m.ClassId != nil {
		return *m.ClassId
	}
	return 0
}

func (m *CSVCMsg_ClassInfoClassT) GetDataTableName() string {
	if m != nil && m.DataTableName != nil {
		return *m.DataTableName
	}
	return ""
}

func (m *CSVCMsg_ClassInfoClassT) GetClassName() string {
	if m != nil && m.ClassName != nil {
		return *m.ClassName
	}
	return ""
}

type CSVCMsg_SetPause struct {
	Paused           *bool  `protobuf:"varint,1,opt,name=paused" json:"paused,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSVCMsg_SetPause) Reset()         { *m = CSVCMsg_SetPause{} }
func (m *CSVCMsg_SetPause) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_SetPause) ProtoMessage()    {}

func (m *CSVCMsg_SetPause) GetPaused() bool {
	if m != nil && m.Paused != nil {
		return *m.Paused
	}
	return false
}

type CSVCMsg_VoiceInit struct {
	Quality          *int32  `protobuf:"varint,1,opt,name=quality" json:"quality,omitempty"`
	Codec            *string `protobuf:"bytes,2,opt,name=codec" json:"codec,omitempty"`
	Version          *int32  `protobuf:"varint,3,opt,name=version,def=0" json:"version,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSVCMsg_VoiceInit) Reset()         { *m = CSVCMsg_VoiceInit{} }
func (m *CSVCMsg_VoiceInit) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_VoiceInit) ProtoMessage()    {}

const Default_CSVCMsg_VoiceInit_Version int32 = 0

func (m *CSVCMsg_VoiceInit) GetQuality() int32 {
	if m != nil && m.Quality != nil {
		return *m.Quality
	}
	return 0
}

func (m *CSVCMsg_VoiceInit) GetCodec() string {
	if m != nil && m.Codec != nil {
		return *m.Codec
	}
	return ""
}

func (m *CSVCMsg_VoiceInit) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return Default_CSVCMsg_VoiceInit_Version
}

type CSVCMsg_Print struct {
	Text             *string `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSVCMsg_Print) Reset()         { *m = CSVCMsg_Print{} }
func (m *CSVCMsg_Print) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_Print) ProtoMessage()    {}

func (m *CSVCMsg_Print) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

type CSVCMsg_Sounds struct {
	ReliableSound    *bool                       `protobuf:"varint,1,opt,name=reliable_sound" json:"reliable_sound,omitempty"`
	Sounds           []*CSVCMsg_SoundsSounddataT `protobuf:"bytes,2,rep,name=sounds" json:"sounds,omitempty"`
	XXX_unrecognized []byte                      `json:"-"`
}

func (m *CSVCMsg_Sounds) Reset()         { *m = CSVCMsg_Sounds{} }
func (m *CSVCMsg_Sounds) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_Sounds) ProtoMessage()    {}

func (m *CSVCMsg_Sounds) GetReliableSound() bool {
	if m != nil && m.ReliableSound != nil {
		return *m.ReliableSound
	}
	return false
}

func (m *CSVCMsg_Sounds) GetSounds() []*CSVCMsg_SoundsSounddataT {
	if m != nil {
		return m.Sounds
	}
	return nil
}

type CSVCMsg_SoundsSounddataT struct {
	OriginX          *int32   `protobuf:"zigzag32,1,opt,name=origin_x" json:"origin_x,omitempty"`
	OriginY          *int32   `protobuf:"zigzag32,2,opt,name=origin_y" json:"origin_y,omitempty"`
	OriginZ          *int32   `protobuf:"zigzag32,3,opt,name=origin_z" json:"origin_z,omitempty"`
	Volume           *uint32  `protobuf:"varint,4,opt,name=volume" json:"volume,omitempty"`
	DelayValue       *float32 `protobuf:"fixed32,5,opt,name=delay_value" json:"delay_value,omitempty"`
	SequenceNumber   *int32   `protobuf:"varint,6,opt,name=sequence_number" json:"sequence_number,omitempty"`
	EntityIndex      *int32   `protobuf:"varint,7,opt,name=entity_index" json:"entity_index,omitempty"`
	Channel          *int32   `protobuf:"varint,8,opt,name=channel" json:"channel,omitempty"`
	Pitch            *int32   `protobuf:"varint,9,opt,name=pitch" json:"pitch,omitempty"`
	Flags            *int32   `protobuf:"varint,10,opt,name=flags" json:"flags,omitempty"`
	SoundNum         *uint32  `protobuf:"varint,11,opt,name=sound_num" json:"sound_num,omitempty"`
	SoundNumHandle   *uint32  `protobuf:"fixed32,12,opt,name=sound_num_handle" json:"sound_num_handle,omitempty"`
	SpeakerEntity    *int32   `protobuf:"varint,13,opt,name=speaker_entity" json:"speaker_entity,omitempty"`
	RandomSeed       *int32   `protobuf:"varint,14,opt,name=random_seed" json:"random_seed,omitempty"`
	SoundLevel       *int32   `protobuf:"varint,15,opt,name=sound_level" json:"sound_level,omitempty"`
	IsSentence       *bool    `protobuf:"varint,16,opt,name=is_sentence" json:"is_sentence,omitempty"`
	IsAmbient        *bool    `protobuf:"varint,17,opt,name=is_ambient" json:"is_ambient,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CSVCMsg_SoundsSounddataT) Reset()         { *m = CSVCMsg_SoundsSounddataT{} }
func (m *CSVCMsg_SoundsSounddataT) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_SoundsSounddataT) ProtoMessage()    {}

func (m *CSVCMsg_SoundsSounddataT) GetOriginX() int32 {
	if m != nil && m.OriginX != nil {
		return *m.OriginX
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetOriginY() int32 {
	if m != nil && m.OriginY != nil {
		return *m.OriginY
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetOriginZ() int32 {
	if m != nil && m.OriginZ != nil {
		return *m.OriginZ
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetVolume() uint32 {
	if m != nil && m.Volume != nil {
		return *m.Volume
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetDelayValue() float32 {
	if m != nil && m.DelayValue != nil {
		return *m.DelayValue
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetSequenceNumber() int32 {
	if m != nil && m.SequenceNumber != nil {
		return *m.SequenceNumber
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetEntityIndex() int32 {
	if m != nil && m.EntityIndex != nil {
		return *m.EntityIndex
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetChannel() int32 {
	if m != nil && m.Channel != nil {
		return *m.Channel
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetPitch() int32 {
	if m != nil && m.Pitch != nil {
		return *m.Pitch
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetFlags() int32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetSoundNum() uint32 {
	if m != nil && m.SoundNum != nil {
		return *m.SoundNum
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetSoundNumHandle() uint32 {
	if m != nil && m.SoundNumHandle != nil {
		return *m.SoundNumHandle
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetSpeakerEntity() int32 {
	if m != nil && m.SpeakerEntity != nil {
		return *m.SpeakerEntity
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetRandomSeed() int32 {
	if m != nil && m.RandomSeed != nil {
		return *m.RandomSeed
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetSoundLevel() int32 {
	if m != nil && m.SoundLevel != nil {
		return *m.SoundLevel
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetIsSentence() bool {
	if m != nil && m.IsSentence != nil {
		return *m.IsSentence
	}
	return false
}

func (m *CSVCMsg_SoundsSounddataT) GetIsAmbient() bool {
	if m != nil && m.IsAmbient != nil {
		return *m.IsAmbient
	}
	return false
}

type CSVCMsg_Prefetch struct {
	SoundIndex       *int32 `protobuf:"varint,1,opt,name=sound_index" json:"sound_index,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSVCMsg_Prefetch) Reset()         { *m = CSVCMsg_Prefetch{} }
func (m *CSVCMsg_Prefetch) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_Prefetch) ProtoMessage()    {}

func (m *CSVCMsg_Prefetch) GetSoundIndex() int32 {
	if m != nil && m.SoundIndex != nil {
		return *m.SoundIndex
	}
	return 0
}

type CSVCMsg_SetView struct {
	EntityIndex      *int32 `protobuf:"varint,1,opt,name=entity_index" json:"entity_index,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSVCMsg_SetView) Reset()         { *m = CSVCMsg_SetView{} }
func (m *CSVCMsg_SetView) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_SetView) ProtoMessage()    {}

func (m *CSVCMsg_SetView) GetEntityIndex() int32 {
	if m != nil && m.EntityIndex != nil {
		return *m.EntityIndex
	}
	return 0
}

type CSVCMsg_FixAngle struct {
	Relative         *bool       `protobuf:"varint,1,opt,name=relative" json:"relative,omitempty"`
	Angle            *CMsgQAngle `protobuf:"bytes,2,opt,name=angle" json:"angle,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CSVCMsg_FixAngle) Reset()         { *m = CSVCMsg_FixAngle{} }
func (m *CSVCMsg_FixAngle) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_FixAngle) ProtoMessage()    {}

func (m *CSVCMsg_FixAngle) GetRelative() bool {
	if m != nil && m.Relative != nil {
		return *m.Relative
	}
	return false
}

func (m *CSVCMsg_FixAngle) GetAngle() *CMsgQAngle {
	if m != nil {
		return m.Angle
	}
	return nil
}

type CSVCMsg_CrosshairAngle struct {
	Angle            *CMsgQAngle `protobuf:"bytes,1,opt,name=angle" json:"angle,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CSVCMsg_CrosshairAngle) Reset()         { *m = CSVCMsg_CrosshairAngle{} }
func (m *CSVCMsg_CrosshairAngle) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_CrosshairAngle) ProtoMessage()    {}

func (m *CSVCMsg_CrosshairAngle) GetAngle() *CMsgQAngle {
	if m != nil {
		return m.Angle
	}
	return nil
}

type CSVCMsg_BSPDecal struct {
	Pos               *CMsgVector `protobuf:"bytes,1,opt,name=pos" json:"pos,omitempty"`
	DecalTextureIndex *int32      `protobuf:"varint,2,opt,name=decal_texture_index" json:"decal_texture_index,omitempty"`
	EntityIndex       *int32      `protobuf:"varint,3,opt,name=entity_index" json:"entity_index,omitempty"`
	ModelIndex        *int32      `protobuf:"varint,4,opt,name=model_index" json:"model_index,omitempty"`
	LowPriority       *bool       `protobuf:"varint,5,opt,name=low_priority" json:"low_priority,omitempty"`
	XXX_unrecognized  []byte      `json:"-"`
}

func (m *CSVCMsg_BSPDecal) Reset()         { *m = CSVCMsg_BSPDecal{} }
func (m *CSVCMsg_BSPDecal) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_BSPDecal) ProtoMessage()    {}

func (m *CSVCMsg_BSPDecal) GetPos() *CMsgVector {
	if m != nil {
		return m.Pos
	}
	return nil
}

func (m *CSVCMsg_BSPDecal) GetDecalTextureIndex() int32 {
	if m != nil && m.DecalTextureIndex != nil {
		return *m.DecalTextureIndex
	}
	return 0
}

func (m *CSVCMsg_BSPDecal) GetEntityIndex() int32 {
	if m != nil && m.EntityIndex != nil {
		return *m.EntityIndex
	}
	return 0
}

func (m *CSVCMsg_BSPDecal) GetModelIndex() int32 {
	if m != nil && m.ModelIndex != nil {
		return *m.ModelIndex
	}
	return 0
}

func (m *CSVCMsg_BSPDecal) GetLowPriority() bool {
	if m != nil && m.LowPriority != nil {
		return *m.LowPriority
	}
	return false
}

type CSVCMsg_SplitScreen struct {
	Type             *ESplitScreenMessageType `protobuf:"varint,1,opt,name=type,enum=dota.ESplitScreenMessageType,def=0" json:"type,omitempty"`
	Slot             *int32                   `protobuf:"varint,2,opt,name=slot" json:"slot,omitempty"`
	PlayerIndex      *int32                   `protobuf:"varint,3,opt,name=player_index" json:"player_index,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *CSVCMsg_SplitScreen) Reset()         { *m = CSVCMsg_SplitScreen{} }
func (m *CSVCMsg_SplitScreen) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_SplitScreen) ProtoMessage()    {}

const Default_CSVCMsg_SplitScreen_Type ESplitScreenMessageType = ESplitScreenMessageType_MSG_SPLITSCREEN_ADDUSER

func (m *CSVCMsg_SplitScreen) GetType() ESplitScreenMessageType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_CSVCMsg_SplitScreen_Type
}

func (m *CSVCMsg_SplitScreen) GetSlot() int32 {
	if m != nil && m.Slot != nil {
		return *m.Slot
	}
	return 0
}

func (m *CSVCMsg_SplitScreen) GetPlayerIndex() int32 {
	if m != nil && m.PlayerIndex != nil {
		return *m.PlayerIndex
	}
	return 0
}

type CSVCMsg_GetCvarValue struct {
	Cookie           *int32  `protobuf:"varint,1,opt,name=cookie" json:"cookie,omitempty"`
	CvarName         *string `protobuf:"bytes,2,opt,name=cvar_name" json:"cvar_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSVCMsg_GetCvarValue) Reset()         { *m = CSVCMsg_GetCvarValue{} }
func (m *CSVCMsg_GetCvarValue) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_GetCvarValue) ProtoMessage()    {}

func (m *CSVCMsg_GetCvarValue) GetCookie() int32 {
	if m != nil && m.Cookie != nil {
		return *m.Cookie
	}
	return 0
}

func (m *CSVCMsg_GetCvarValue) GetCvarName() string {
	if m != nil && m.CvarName != nil {
		return *m.CvarName
	}
	return ""
}

type CSVCMsg_Menu struct {
	DialogType       *int32 `protobuf:"varint,1,opt,name=dialog_type" json:"dialog_type,omitempty"`
	MenuKeyValues    []byte `protobuf:"bytes,2,opt,name=menu_key_values" json:"menu_key_values,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSVCMsg_Menu) Reset()         { *m = CSVCMsg_Menu{} }
func (m *CSVCMsg_Menu) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_Menu) ProtoMessage()    {}

func (m *CSVCMsg_Menu) GetDialogType() int32 {
	if m != nil && m.DialogType != nil {
		return *m.DialogType
	}
	return 0
}

func (m *CSVCMsg_Menu) GetMenuKeyValues() []byte {
	if m != nil {
		return m.MenuKeyValues
	}
	return nil
}

type CSVCMsg_SendTable struct {
	IsEnd            *bool                         `protobuf:"varint,1,opt,name=is_end" json:"is_end,omitempty"`
	NetTableName     *string                       `protobuf:"bytes,2,opt,name=net_table_name" json:"net_table_name,omitempty"`
	NeedsDecoder     *bool                         `protobuf:"varint,3,opt,name=needs_decoder" json:"needs_decoder,omitempty"`
	Props            []*CSVCMsg_SendTableSendpropT `protobuf:"bytes,4,rep,name=props" json:"props,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *CSVCMsg_SendTable) Reset()         { *m = CSVCMsg_SendTable{} }
func (m *CSVCMsg_SendTable) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_SendTable) ProtoMessage()    {}

func (m *CSVCMsg_SendTable) GetIsEnd() bool {
	if m != nil && m.IsEnd != nil {
		return *m.IsEnd
	}
	return false
}

func (m *CSVCMsg_SendTable) GetNetTableName() string {
	if m != nil && m.NetTableName != nil {
		return *m.NetTableName
	}
	return ""
}

func (m *CSVCMsg_SendTable) GetNeedsDecoder() bool {
	if m != nil && m.NeedsDecoder != nil {
		return *m.NeedsDecoder
	}
	return false
}

func (m *CSVCMsg_SendTable) GetProps() []*CSVCMsg_SendTableSendpropT {
	if m != nil {
		return m.Props
	}
	return nil
}

type CSVCMsg_SendTableSendpropT struct {
	Type             *int32   `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	VarName          *string  `protobuf:"bytes,2,opt,name=var_name" json:"var_name,omitempty"`
	Flags            *int32   `protobuf:"varint,3,opt,name=flags" json:"flags,omitempty"`
	Priority         *int32   `protobuf:"varint,4,opt,name=priority" json:"priority,omitempty"`
	DtName           *string  `protobuf:"bytes,5,opt,name=dt_name" json:"dt_name,omitempty"`
	NumElements      *int32   `protobuf:"varint,6,opt,name=num_elements" json:"num_elements,omitempty"`
	LowValue         *float32 `protobuf:"fixed32,7,opt,name=low_value" json:"low_value,omitempty"`
	HighValue        *float32 `protobuf:"fixed32,8,opt,name=high_value" json:"high_value,omitempty"`
	NumBits          *int32   `protobuf:"varint,9,opt,name=num_bits" json:"num_bits,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CSVCMsg_SendTableSendpropT) Reset()         { *m = CSVCMsg_SendTableSendpropT{} }
func (m *CSVCMsg_SendTableSendpropT) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_SendTableSendpropT) ProtoMessage()    {}

func (m *CSVCMsg_SendTableSendpropT) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CSVCMsg_SendTableSendpropT) GetVarName() string {
	if m != nil && m.VarName != nil {
		return *m.VarName
	}
	return ""
}

func (m *CSVCMsg_SendTableSendpropT) GetFlags() int32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CSVCMsg_SendTableSendpropT) GetPriority() int32 {
	if m != nil && m.Priority != nil {
		return *m.Priority
	}
	return 0
}

func (m *CSVCMsg_SendTableSendpropT) GetDtName() string {
	if m != nil && m.DtName != nil {
		return *m.DtName
	}
	return ""
}

func (m *CSVCMsg_SendTableSendpropT) GetNumElements() int32 {
	if m != nil && m.NumElements != nil {
		return *m.NumElements
	}
	return 0
}

func (m *CSVCMsg_SendTableSendpropT) GetLowValue() float32 {
	if m != nil && m.LowValue != nil {
		return *m.LowValue
	}
	return 0
}

func (m *CSVCMsg_SendTableSendpropT) GetHighValue() float32 {
	if m != nil && m.HighValue != nil {
		return *m.HighValue
	}
	return 0
}

func (m *CSVCMsg_SendTableSendpropT) GetNumBits() int32 {
	if m != nil && m.NumBits != nil {
		return *m.NumBits
	}
	return 0
}

type CSVCMsg_GameEventList struct {
	Descriptors      []*CSVCMsg_GameEventListDescriptorT `protobuf:"bytes,1,rep,name=descriptors" json:"descriptors,omitempty"`
	XXX_unrecognized []byte                              `json:"-"`
}

func (m *CSVCMsg_GameEventList) Reset()         { *m = CSVCMsg_GameEventList{} }
func (m *CSVCMsg_GameEventList) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_GameEventList) ProtoMessage()    {}

func (m *CSVCMsg_GameEventList) GetDescriptors() []*CSVCMsg_GameEventListDescriptorT {
	if m != nil {
		return m.Descriptors
	}
	return nil
}

type CSVCMsg_GameEventListKeyT struct {
	Type             *int32  `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSVCMsg_GameEventListKeyT) Reset()         { *m = CSVCMsg_GameEventListKeyT{} }
func (m *CSVCMsg_GameEventListKeyT) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_GameEventListKeyT) ProtoMessage()    {}

func (m *CSVCMsg_GameEventListKeyT) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CSVCMsg_GameEventListKeyT) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type CSVCMsg_GameEventListDescriptorT struct {
	Eventid          *int32                       `protobuf:"varint,1,opt,name=eventid" json:"eventid,omitempty"`
	Name             *string                      `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Keys             []*CSVCMsg_GameEventListKeyT `protobuf:"bytes,3,rep,name=keys" json:"keys,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *CSVCMsg_GameEventListDescriptorT) Reset()         { *m = CSVCMsg_GameEventListDescriptorT{} }
func (m *CSVCMsg_GameEventListDescriptorT) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_GameEventListDescriptorT) ProtoMessage()    {}

func (m *CSVCMsg_GameEventListDescriptorT) GetEventid() int32 {
	if m != nil && m.Eventid != nil {
		return *m.Eventid
	}
	return 0
}

func (m *CSVCMsg_GameEventListDescriptorT) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CSVCMsg_GameEventListDescriptorT) GetKeys() []*CSVCMsg_GameEventListKeyT {
	if m != nil {
		return m.Keys
	}
	return nil
}

type CSVCMsg_PacketEntities struct {
	MaxEntries       *int32 `protobuf:"varint,1,opt,name=max_entries" json:"max_entries,omitempty"`
	UpdatedEntries   *int32 `protobuf:"varint,2,opt,name=updated_entries" json:"updated_entries,omitempty"`
	IsDelta          *bool  `protobuf:"varint,3,opt,name=is_delta" json:"is_delta,omitempty"`
	UpdateBaseline   *bool  `protobuf:"varint,4,opt,name=update_baseline" json:"update_baseline,omitempty"`
	Baseline         *int32 `protobuf:"varint,5,opt,name=baseline" json:"baseline,omitempty"`
	DeltaFrom        *int32 `protobuf:"varint,6,opt,name=delta_from" json:"delta_from,omitempty"`
	EntityData       []byte `protobuf:"bytes,7,opt,name=entity_data" json:"entity_data,omitempty"`
	PendingFullFrame *bool  `protobuf:"varint,8,opt,name=pending_full_frame" json:"pending_full_frame,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSVCMsg_PacketEntities) Reset()         { *m = CSVCMsg_PacketEntities{} }
func (m *CSVCMsg_PacketEntities) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_PacketEntities) ProtoMessage()    {}

func (m *CSVCMsg_PacketEntities) GetMaxEntries() int32 {
	if m != nil && m.MaxEntries != nil {
		return *m.MaxEntries
	}
	return 0
}

func (m *CSVCMsg_PacketEntities) GetUpdatedEntries() int32 {
	if m != nil && m.UpdatedEntries != nil {
		return *m.UpdatedEntries
	}
	return 0
}

func (m *CSVCMsg_PacketEntities) GetIsDelta() bool {
	if m != nil && m.IsDelta != nil {
		return *m.IsDelta
	}
	return false
}

func (m *CSVCMsg_PacketEntities) GetUpdateBaseline() bool {
	if m != nil && m.UpdateBaseline != nil {
		return *m.UpdateBaseline
	}
	return false
}

func (m *CSVCMsg_PacketEntities) GetBaseline() int32 {
	if m != nil && m.Baseline != nil {
		return *m.Baseline
	}
	return 0
}

func (m *CSVCMsg_PacketEntities) GetDeltaFrom() int32 {
	if m != nil && m.DeltaFrom != nil {
		return *m.DeltaFrom
	}
	return 0
}

func (m *CSVCMsg_PacketEntities) GetEntityData() []byte {
	if m != nil {
		return m.EntityData
	}
	return nil
}

func (m *CSVCMsg_PacketEntities) GetPendingFullFrame() bool {
	if m != nil && m.PendingFullFrame != nil {
		return *m.PendingFullFrame
	}
	return false
}

type CSVCMsg_TempEntities struct {
	Reliable         *bool  `protobuf:"varint,1,opt,name=reliable" json:"reliable,omitempty"`
	NumEntries       *int32 `protobuf:"varint,2,opt,name=num_entries" json:"num_entries,omitempty"`
	EntityData       []byte `protobuf:"bytes,3,opt,name=entity_data" json:"entity_data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSVCMsg_TempEntities) Reset()         { *m = CSVCMsg_TempEntities{} }
func (m *CSVCMsg_TempEntities) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_TempEntities) ProtoMessage()    {}

func (m *CSVCMsg_TempEntities) GetReliable() bool {
	if m != nil && m.Reliable != nil {
		return *m.Reliable
	}
	return false
}

func (m *CSVCMsg_TempEntities) GetNumEntries() int32 {
	if m != nil && m.NumEntries != nil {
		return *m.NumEntries
	}
	return 0
}

func (m *CSVCMsg_TempEntities) GetEntityData() []byte {
	if m != nil {
		return m.EntityData
	}
	return nil
}

type CSVCMsg_CreateStringTable struct {
	Name              *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	MaxEntries        *int32  `protobuf:"varint,2,opt,name=max_entries" json:"max_entries,omitempty"`
	NumEntries        *int32  `protobuf:"varint,3,opt,name=num_entries" json:"num_entries,omitempty"`
	UserDataFixedSize *bool   `protobuf:"varint,4,opt,name=user_data_fixed_size" json:"user_data_fixed_size,omitempty"`
	UserDataSize      *int32  `protobuf:"varint,5,opt,name=user_data_size" json:"user_data_size,omitempty"`
	UserDataSizeBits  *int32  `protobuf:"varint,6,opt,name=user_data_size_bits" json:"user_data_size_bits,omitempty"`
	Flags             *int32  `protobuf:"varint,7,opt,name=flags" json:"flags,omitempty"`
	StringData        []byte  `protobuf:"bytes,8,opt,name=string_data" json:"string_data,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CSVCMsg_CreateStringTable) Reset()         { *m = CSVCMsg_CreateStringTable{} }
func (m *CSVCMsg_CreateStringTable) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_CreateStringTable) ProtoMessage()    {}

func (m *CSVCMsg_CreateStringTable) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CSVCMsg_CreateStringTable) GetMaxEntries() int32 {
	if m != nil && m.MaxEntries != nil {
		return *m.MaxEntries
	}
	return 0
}

func (m *CSVCMsg_CreateStringTable) GetNumEntries() int32 {
	if m != nil && m.NumEntries != nil {
		return *m.NumEntries
	}
	return 0
}

func (m *CSVCMsg_CreateStringTable) GetUserDataFixedSize() bool {
	if m != nil && m.UserDataFixedSize != nil {
		return *m.UserDataFixedSize
	}
	return false
}

func (m *CSVCMsg_CreateStringTable) GetUserDataSize() int32 {
	if m != nil && m.UserDataSize != nil {
		return *m.UserDataSize
	}
	return 0
}

func (m *CSVCMsg_CreateStringTable) GetUserDataSizeBits() int32 {
	if m != nil && m.UserDataSizeBits != nil {
		return *m.UserDataSizeBits
	}
	return 0
}

func (m *CSVCMsg_CreateStringTable) GetFlags() int32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CSVCMsg_CreateStringTable) GetStringData() []byte {
	if m != nil {
		return m.StringData
	}
	return nil
}

type CSVCMsg_UpdateStringTable struct {
	TableId           *int32 `protobuf:"varint,1,opt,name=table_id" json:"table_id,omitempty"`
	NumChangedEntries *int32 `protobuf:"varint,2,opt,name=num_changed_entries" json:"num_changed_entries,omitempty"`
	StringData        []byte `protobuf:"bytes,3,opt,name=string_data" json:"string_data,omitempty"`
	XXX_unrecognized  []byte `json:"-"`
}

func (m *CSVCMsg_UpdateStringTable) Reset()         { *m = CSVCMsg_UpdateStringTable{} }
func (m *CSVCMsg_UpdateStringTable) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_UpdateStringTable) ProtoMessage()    {}

func (m *CSVCMsg_UpdateStringTable) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *CSVCMsg_UpdateStringTable) GetNumChangedEntries() int32 {
	if m != nil && m.NumChangedEntries != nil {
		return *m.NumChangedEntries
	}
	return 0
}

func (m *CSVCMsg_UpdateStringTable) GetStringData() []byte {
	if m != nil {
		return m.StringData
	}
	return nil
}

type CSVCMsg_VoiceData struct {
	Client                   *int32            `protobuf:"varint,1,opt,name=client" json:"client,omitempty"`
	Proximity                *bool             `protobuf:"varint,2,opt,name=proximity" json:"proximity,omitempty"`
	Xuid                     *uint64           `protobuf:"fixed64,3,opt,name=xuid" json:"xuid,omitempty"`
	AudibleMask              *int32            `protobuf:"varint,4,opt,name=audible_mask" json:"audible_mask,omitempty"`
	VoiceData                []byte            `protobuf:"bytes,5,opt,name=voice_data" json:"voice_data,omitempty"`
	Format                   *VoiceDataFormatT `protobuf:"varint,6,opt,name=format,enum=dota.VoiceDataFormatT,def=0" json:"format,omitempty"`
	SequenceBytes            *int32            `protobuf:"varint,7,opt,name=sequence_bytes" json:"sequence_bytes,omitempty"`
	SectionNumber            *uint32           `protobuf:"varint,8,opt,name=section_number" json:"section_number,omitempty"`
	UncompressedSampleOffset *uint32           `protobuf:"varint,9,opt,name=uncompressed_sample_offset" json:"uncompressed_sample_offset,omitempty"`
	Tick                     *uint32           `protobuf:"varint,10,opt,name=tick" json:"tick,omitempty"`
	XXX_unrecognized         []byte            `json:"-"`
}

func (m *CSVCMsg_VoiceData) Reset()         { *m = CSVCMsg_VoiceData{} }
func (m *CSVCMsg_VoiceData) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_VoiceData) ProtoMessage()    {}

const Default_CSVCMsg_VoiceData_Format VoiceDataFormatT = VoiceDataFormatT_VOICEDATA_FORMAT_STEAM

func (m *CSVCMsg_VoiceData) GetClient() int32 {
	if m != nil && m.Client != nil {
		return *m.Client
	}
	return 0
}

func (m *CSVCMsg_VoiceData) GetProximity() bool {
	if m != nil && m.Proximity != nil {
		return *m.Proximity
	}
	return false
}

func (m *CSVCMsg_VoiceData) GetXuid() uint64 {
	if m != nil && m.Xuid != nil {
		return *m.Xuid
	}
	return 0
}

func (m *CSVCMsg_VoiceData) GetAudibleMask() int32 {
	if m != nil && m.AudibleMask != nil {
		return *m.AudibleMask
	}
	return 0
}

func (m *CSVCMsg_VoiceData) GetVoiceData() []byte {
	if m != nil {
		return m.VoiceData
	}
	return nil
}

func (m *CSVCMsg_VoiceData) GetFormat() VoiceDataFormatT {
	if m != nil && m.Format != nil {
		return *m.Format
	}
	return Default_CSVCMsg_VoiceData_Format
}

func (m *CSVCMsg_VoiceData) GetSequenceBytes() int32 {
	if m != nil && m.SequenceBytes != nil {
		return *m.SequenceBytes
	}
	return 0
}

func (m *CSVCMsg_VoiceData) GetSectionNumber() uint32 {
	if m != nil && m.SectionNumber != nil {
		return *m.SectionNumber
	}
	return 0
}

func (m *CSVCMsg_VoiceData) GetUncompressedSampleOffset() uint32 {
	if m != nil && m.UncompressedSampleOffset != nil {
		return *m.UncompressedSampleOffset
	}
	return 0
}

func (m *CSVCMsg_VoiceData) GetTick() uint32 {
	if m != nil && m.Tick != nil {
		return *m.Tick
	}
	return 0
}

type CSVCMsg_PacketReliable struct {
	Tick             *int32 `protobuf:"varint,1,opt,name=tick" json:"tick,omitempty"`
	Messagessize     *int32 `protobuf:"varint,2,opt,name=messagessize" json:"messagessize,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSVCMsg_PacketReliable) Reset()         { *m = CSVCMsg_PacketReliable{} }
func (m *CSVCMsg_PacketReliable) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_PacketReliable) ProtoMessage()    {}

func (m *CSVCMsg_PacketReliable) GetTick() int32 {
	if m != nil && m.Tick != nil {
		return *m.Tick
	}
	return 0
}

func (m *CSVCMsg_PacketReliable) GetMessagessize() int32 {
	if m != nil && m.Messagessize != nil {
		return *m.Messagessize
	}
	return 0
}

type CSVCMsg_FullFrameSplit struct {
	Tick             *int32 `protobuf:"varint,1,opt,name=tick" json:"tick,omitempty"`
	Section          *int32 `protobuf:"varint,2,opt,name=section" json:"section,omitempty"`
	Total            *int32 `protobuf:"varint,3,opt,name=total" json:"total,omitempty"`
	Data             []byte `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSVCMsg_FullFrameSplit) Reset()         { *m = CSVCMsg_FullFrameSplit{} }
func (m *CSVCMsg_FullFrameSplit) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_FullFrameSplit) ProtoMessage()    {}

func (m *CSVCMsg_FullFrameSplit) GetTick() int32 {
	if m != nil && m.Tick != nil {
		return *m.Tick
	}
	return 0
}

func (m *CSVCMsg_FullFrameSplit) GetSection() int32 {
	if m != nil && m.Section != nil {
		return *m.Section
	}
	return 0
}

func (m *CSVCMsg_FullFrameSplit) GetTotal() int32 {
	if m != nil && m.Total != nil {
		return *m.Total
	}
	return 0
}

func (m *CSVCMsg_FullFrameSplit) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterEnum("dota.CLC_Messages", CLC_Messages_name, CLC_Messages_value)
	proto.RegisterEnum("dota.SVC_Messages", SVC_Messages_name, SVC_Messages_value)
	proto.RegisterEnum("dota.VoiceDataFormatT", VoiceDataFormatT_name, VoiceDataFormatT_value)
	proto.RegisterEnum("dota.ESplitScreenMessageType", ESplitScreenMessageType_name, ESplitScreenMessageType_value)
}
